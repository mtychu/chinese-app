#Flashcard schema - Chinese Vocabulary
type Flashcard @model @auth(rules: [{ allow: public }]) {
  id: ID! @primaryKey
  level: String! @index(name: "byLevel", queryField: "level")
  chineseTrad: String! @index(name: "byTrad", queryField: "chineseTrad")
  chineseSimp: String! @index(name: "bySimp", queryField: "chineseSimp")

  meanings: [String]!
  meaningMnemonic: String
  meaningHint: String

  readings: [String!]!
  readingMnemonic: String
  readingHint: String

  examples: [[String]]! #[["ex 1 chinese", "ex 2 chinese"], ["ex 1 pinyin", "ex 2 pinyin"]]
  prereqs: [String]!
  unlocks: [String]!
}

#User Schema to keep track of general user stuff.
type User @model @auth(rules: [{ allow: public }]) {
  id: ID! @primaryKey
  displayName: String!
  firstName: String
  lastName: String
  email: String
  progress: [UserProgress!]! #["id",progress,["user meaning"],["user meaning"]"
  #https://www.supermemo.com/en/archives1990-2015/help/smalg
}

type UserProgress {
  flashcardId: ID!
  progress: String!
  nextReview: AWSDateTime
  userMeaning: String
  userNotes: String
  #https://www.supermemo.com/en/archives1990-2015/help/smalg
}

type Todo @model @auth(rules: [{ allow: public }]) {
  id: ID!
  name: String!
  description: String
}

type Blog @model @auth(rules: [{ allow: public }]) {
  id: ID!
  name: String!
  posts: [Post] @hasMany
}

type Post @model @auth(rules: [{ allow: public }]) {
  id: ID!
  title: String!
  blog: Blog @belongsTo
  comments: [Comment] @hasMany
}

type Comment @model @auth(rules: [{ allow: public }]) {
  id: ID!
  post: Post @belongsTo
  content: String!
}
